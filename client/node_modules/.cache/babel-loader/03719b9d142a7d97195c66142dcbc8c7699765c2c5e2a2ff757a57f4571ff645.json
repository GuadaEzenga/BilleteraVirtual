{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api'; // Cambiar a la URL de la API real\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const login = async credentials => {\n  const response = await api.post('/auth/login', credentials);\n  return response.data;\n};\nexport const getTransfers = async () => {\n  const response = await api.get('/transfers');\n  return response.data;\n};\nexport const createTransfer = async data => {\n  const response = await api.post('/transfers', data);\n  return response.data;\n};\nexport const getTransferById = async id => {\n  const response = await api.get(`/transfers/${id}`);\n  return response.data;\n};\nexport const searchUsers = async query => {\n  const response = await api.get(`/users?search=${query}`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","login","credentials","response","post","data","getTransfers","get","createTransfer","getTransferById","id","searchUsers","query"],"sources":["C:/Users/Juve/Documents/programacion/billeteraTP1/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api'; // Cambiar a la URL de la API real\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: { 'Content-Type': 'application/json' },\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const login = async (credentials) => {\r\n  const response = await api.post('/auth/login', credentials);\r\n  return response.data;\r\n};\r\n\r\nexport const getTransfers = async () => {\r\n  const response = await api.get('/transfers');\r\n  return response.data;\r\n};\r\n\r\nexport const createTransfer = async (data) => {\r\n  const response = await api.post('/transfers', data);\r\n  return response.data;\r\n};\r\n\r\nexport const getTransferById = async (id) => {\r\n  const response = await api.get(`/transfers/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const searchUsers = async (query) => {\r\n  const response = await api.get(`/users?search=${query}`);\r\n  return response.data;\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAChD,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC;EAC3D,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMH,QAAQ,GAAG,MAAMd,GAAG,CAACkB,GAAG,CAAC,YAAY,CAAC;EAC5C,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAOH,IAAI,IAAK;EAC5C,MAAMF,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,YAAY,EAAEC,IAAI,CAAC;EACnD,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,MAAOC,EAAE,IAAK;EAC3C,MAAMP,QAAQ,GAAG,MAAMd,GAAG,CAACkB,GAAG,CAAC,cAAcG,EAAE,EAAE,CAAC;EAClD,OAAOP,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG,MAAOC,KAAK,IAAK;EAC1C,MAAMT,QAAQ,GAAG,MAAMd,GAAG,CAACkB,GAAG,CAAC,iBAAiBK,KAAK,EAAE,CAAC;EACxD,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}